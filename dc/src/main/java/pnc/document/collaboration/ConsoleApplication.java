/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pnc.document.collaboration;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.Banner;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import pnc.document.collaboration.Actions.impl.CreateFolder;
import pnc.document.collaboration.Actions.impl.ListUsers;
import pnc.document.collaboration.Actions.impl.MyProfile;
import pnc.document.collaboration.beans.MyProfileResponse;

import java.util.Optional;
import java.util.Scanner;

@SpringBootApplication
public class ConsoleApplication implements CommandLineRunner {
    @Autowired
    private MyProfile myProfile;

    @Autowired
    private ListUsers users;

    @Autowired
    private CreateFolder directory;

    public static void main(String[] args) {
        //SpringApplication.run(ConsoleApplication.class, args);
        SpringApplication theApp = new SpringApplication(ConsoleApplication.class);
        theApp.setBannerMode(Banner.Mode.OFF);
        theApp.run(args);
    }

    public static void print(MyProfileResponse profile) {
        System.out.println("----------------------------------------------");
        System.out.println("id : " + profile.getId());
        System.out.println("GivenName : " + profile.getGivenName());
        System.out.println("Surname : " + profile.getSurname());
        System.out.println("DisplayName : " + profile.getDisplayName());
        System.out.println("JobTitle : " + profile.getJobTitle());
        System.out.println("----------------------------------------------");
        System.out.println();
    }

    @Override
    public void run(String... args) throws Exception {

        String input = "";
        Scanner in = new Scanner(System.in);

        while (true) {
            System.out.println();
            System.out.println();
            System.out.println("Enter any of the following commands...");
            System.out.println("----------------------------------------------------");
            System.out.println("SHOW ME");
            System.out.println("SHOW USERS");
            System.out.println("SHOW FILES");
            System.out.println("SHOW SITES");
            System.out.println("CREATE DIRECTORY <directoryName>");
            System.out.println("CREATE PUBLIC|PRIVATE SITE <siteName>");
            System.out.println("SHARE DOCUMENT <documentId> with <emailId-1>, <emailId-2>...<emailId-n>");
            System.out.println("EXIT");
            System.out.println("----------------------------------------------------");
            System.out.print("#");
            input = in.nextLine();

            if (input.equalsIgnoreCase("EXIT")) {
                System.out.println("Thank You!, Have a nice day!");
                return;
            } else if (input.equalsIgnoreCase("SHOW ME")) {
                Optional.ofNullable(myProfile.execute("")).ifPresent(ConsoleApplication::print);
            } else if (input.equalsIgnoreCase("SHOW USERS")) {
                Optional.ofNullable(users.execute("")).ifPresent(json -> {json.forEach(profile -> {print(profile);});});
            } else if (input.equalsIgnoreCase("SHOW FILES")) {

            } else if (input.equalsIgnoreCase("SHOW SITES")) {

            } else if (input.startsWith("CREATE DIRECTORY")) {
                String[] stdin = input.split(" ");
                Optional.ofNullable(directory.execute(stdin[2])).ifPresent(System.out::println);
            } else if (input.startsWith("CREATE PUBLIC")) {

            } else if (input.startsWith("CREATE PRIVATE")) {

            } else if (input.startsWith("SHARE DOCUMENT")) {

            } else {
                System.err.println("Invalid attempt! " + input);
            }
        }
    }
}
